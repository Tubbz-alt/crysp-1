import pytest
from crysp.chacha import *

def assertks(k,v):
    l = ["0x%02x"%x for x in k.split(8).ival]
    assert l==v.split()

K  = Bits(0,128)
iv = Bits(0,64)

def test_chacha_000():
    C = Chacha(K,rounds=8)
    ks = C.keystream(iv)
    k0 = next(ks)
    v00 = """
    0xe2 0x8a 0x5f 0xa4 0xa6 0x7f 0x8c 0x5d
    0xef 0xed 0x3e 0x6f 0xb7 0x30 0x34 0x86
    0xaa 0x84 0x27 0xd3 0x14 0x19 0xa7 0x29
    0x57 0x2d 0x77 0x79 0x53 0x49 0x11 0x20
    0xb6 0x4a 0xb8 0xe7 0x2b 0x8d 0xeb 0x85
    0xcd 0x6a 0xea 0x7c 0xb6 0x08 0x9a 0x10
    0x18 0x24 0xbe 0xeb 0x08 0x81 0x4a 0x42
    0x8a 0xab 0x1f 0xa2 0xc8 0x16 0x08 0x1b
    """
    assertks(k0,v00)
    k1 = next(ks)
    v01 = """
    0x8a 0x26 0xaf 0x44 0x8a 0x1b 0xa9 0x06
    0x36 0x8f 0xd8 0xc8 0x38 0x31 0xc1 0x8c
    0xec 0x8c 0xed 0x81 0x1a 0x02 0x8e 0x67
    0x5b 0x8d 0x2b 0xe8 0xfc 0xe0 0x81 0x16
    0x5c 0xea 0xe9 0xf1 0xd1 0xb7 0xa9 0x75
    0x49 0x77 0x49 0x48 0x05 0x69 0xce 0xb8
    0x3d 0xe6 0xa0 0xa5 0x87 0xd4 0x98 0x4f
    0x19 0x92 0x5f 0x5d 0x33 0x8e 0x43 0x0d
    """
    assertks(k1,v01)

# -------------------------------------------------------------------

def test_chacha_001():
    C = Chacha(K,rounds=12)
    ks = C.keystream(iv)
    k0 = next(ks)
    v02 = """
    0xe1 0x04 0x7b 0xa9 0x47 0x6b 0xf8 0xff
    0x31 0x2c 0x01 0xb4 0x34 0x5a 0x7d 0x8c
    0xa5 0x79 0x2b 0x0a 0xd4 0x67 0x31 0x3f
    0x1d 0xc4 0x12 0xb5 0xfd 0xce 0x32 0x41
    0x0d 0xea 0x8b 0x68 0xbd 0x77 0x4c 0x36
    0xa9 0x20 0xf0 0x92 0xa0 0x4d 0x3f 0x95
    0x27 0x4f 0xbe 0xff 0x97 0xbc 0x84 0x91
    0xfc 0xef 0x37 0xf8 0x59 0x70 0xb4 0x50
    """
    assertks(k0,v02)
    k1 = next(ks)
    v03 = """
    0x1d 0x43 0xb6 0x1a 0x8f 0x7e 0x19 0xfc
    0xed 0xde 0xf3 0x68 0xae 0x6b 0xfb 0x11
    0x10 0x1b 0xd9 0xfd 0x3e 0x4d 0x12 0x7d
    0xe3 0x0d 0xb2 0xdb 0x1b 0x47 0x2e 0x76
    0x42 0x68 0x03 0xa4 0x5e 0x15 0xb9 0x62
    0x75 0x19 0x86 0xef 0x1d 0x9d 0x50 0xf5
    0x98 0xa5 0xdc 0xdc 0x9f 0xa5 0x29 0xa2
    0x83 0x57 0x99 0x1e 0x78 0x4e 0xa2 0x0f
    """
    assertks(k1,v03)

# -------------------------------------------------------------------

def test_chacha_002():
    C = Chacha(K+1,rounds=20)
    ks = C.keystream(iv)
    k0 = next(ks)
    v04 = """
    0xae 0x56 0x06 0x0d 0x04 0xf5 0xb5 0x97
    0x89 0x7f 0xf2 0xaf 0x13 0x88 0xdb 0xce
    0xff 0x5a 0x2a 0x49 0x20 0x33 0x5d 0xc1
    0x7a 0x3c 0xb1 0xb1 0xb1 0x0f 0xbe 0x70
    0xec 0xe8 0xf4 0x86 0x4d 0x8c 0x7c 0xdf
    0x00 0x76 0x45 0x3a 0x82 0x91 0xc7 0xdb
    0xeb 0x3a 0xa9 0xc9 0xd1 0x0e 0x8c 0xa3
    0x6b 0xe4 0x44 0x93 0x76 0xed 0x7c 0x42
    """
    assertks(k0,v04)

# -------------------------------------------------------------------

def tobits(s):
    x = bytes([int(x,16) for x in s.split()])
    return Bits(x,bitorder=1)

def test_chacha_003():
    K = tobits("""
    0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77
    0x88 0x99 0xaa 0xbb 0xcc 0xdd 0xee 0xff
    0xff 0xee 0xdd 0xcc 0xbb 0xaa 0x99 0x88
    0x77 0x66 0x55 0x44 0x33 0x22 0x11 0x00
    """)
    C = Chacha(K,rounds=20)
    iv = tobits("0x0f 0x1e 0x2d 0x3c 0x4b 0x5a 0x69 0x78")
    ks = C.keystream(iv)
    k0 = next(ks)
    v05 = """
    0x9f 0xad 0xf4 0x09 0xc0 0x08 0x11 0xd0 
    0x04 0x31 0xd6 0x7e 0xfb 0xd8 0x8f 0xba 
    0x59 0x21 0x8d 0x5d 0x67 0x08 0xb1 0xd6 
    0x85 0x86 0x3f 0xab 0xbb 0x0e 0x96 0x1e 
    0xea 0x48 0x0f 0xd6 0xfb 0x53 0x2b 0xfd 
    0x49 0x4b 0x21 0x51 0x01 0x50 0x57 0x42 
    0x3a 0xb6 0x0a 0x63 0xfe 0x4f 0x55 0xf7 
    0xa2 0x12 0xe2 0x16 0x7c 0xca 0xb9 0x31 
    """
    assertks(k0,v05)
